
Input: boxTypes = [[1,3],[2,2],[3,1]], truckSize = 4
Output: 8
Explanation: There are:
- 1 box of the first type that contains 3 units.
- 2 boxes of the second type that contain 2 units each.
- 3 boxes of the third type that contain 1 unit each.
You can take all the boxes of the first and second types, and one box of the third type.
The total number of units will be = (1 * 3) + (2 * 2) + (1 * 1) = 8.
Example 2:

Input: boxTypes = [[5,10],[2,5],[4,7],[3,9]], truckSize = 10
Output: 91

-------------------Solution----------------------------

class Solution {
    public int maximumUnits(int[][] boxTypes, int truckSize) {
        // for(int i=0;i<boxTypes.length-1;i++)
        // {
        //     for(int j=0;j<boxTypes.length-1-i;j++)
        //     {
        //         if(boxTypes[j][1]<boxTypes[j+1][1]){
        //         int[]temp=boxTypes[j].clone();
        //         boxTypes[j]=boxTypes[j+1].clone();
        //         boxTypes[j+1]=temp.clone();
        //          }
        //     }
        // }
        Arrays.sort(boxTypes, (a, b) -> Integer.compare(b[1],a[1]));
        int maxProfit=0;
        for(int i=0;i<boxTypes.length;i++)
        { 
            if(truckSize>0&&boxTypes[i][0]<=truckSize)
            {
                  maxProfit+=boxTypes[i][0]*boxTypes[i][1];
                  truckSize-=boxTypes[i][0];
            }
            else
            {
                maxProfit+=boxTypes[i][1]*truckSize;
                break;
            }
        }
        return maxProfit;
    }
}

// class Solution {
//     public int maximumUnits(int[][] boxTypes, int truckSize) {

//     }
// }
