Given a m x n matrix grid which is sorted in non-increasing order both row-wise and column-wise, return the number of negative numbers in grid.

 

Example 1:

Input: grid = [[4,3,2,-1],[3,2,1,-1],[1,1,-1,-2],[-1,-1,-2,-3]]
Output: 8
Explanation: There are 8 negatives number in the matrix.

----------solution--------------------------------------



class Solution {
    public int countNegatives(int[][] grid) {
        int count=0;
        for(int i=0;i<grid.length;i++)
        {
            count+=count(grid[i]);
        }
        return count;
    }
    static int count(int[]arr)
    {
        if(arr[0]<0)
        return arr.length;
        if(arr[arr.length-1]>=0)
         return 0;
        int s=0,e=arr.length-1;
        int mid=0;
        while(s<=e)
        {
            mid=s+(e-s)/2;
            if(arr[mid]>=0)
            s=mid+1;
            else if(arr[mid]<0&&arr[mid-1]>=0)
            return arr.length-mid;
            else if(arr[mid]<0)
            e=mid-1;
        }
        return 0;
    }
}
