21. Merge Two Sorted Lists
Easy
15.6K
1.4K
Companies
You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.

 ----------------------------------Solution---------------------------

Example 1:


Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode head=null,tail=null;
        if(list2==null&&list1==null)
        return list1;
        if(list1==null&&list2!=null)
        return list2;
        if(list2==null&&list1!=null)
        return list1;
        while(list1!=null&&list2!=null){
        if(list1.val<=list2.val)
        {
            ListNode node=new ListNode(list1.val,null);
            if(head==null)
            head=tail=node;
            else
            {
                tail.next=node;
                tail=node;
            }
            list1=list1.next;
        }
        else{
            ListNode node= new ListNode(list2.val,null);
            if(head==null)
            head=tail=node;
            else{
                tail.next=node;
                tail=node;
            }
            list2=list2.next;
        }
        }
        if(list1!=null)
        tail.next=list1;
        if(list2!=null)
        tail.next=list2;

        return head;
    }
}
