/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

Input: head = [1,2,2,1]
Output: true
------------------------
 
class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode mid=getMiddle(head);
        ListNode secondHead=reverse(mid);
        while(head!=null&&secondHead!=null)
        {
            if(head.val!=secondHead.val)
            break;
            head=head.next;
            secondHead=secondHead.next;
        }
       boolean x= (head==null||secondHead==null) ? true :false;
    return x;
    }
    static ListNode getMiddle(ListNode head)
    {
        ListNode slow=head;
        ListNode fast=head;
        while(fast!=null && fast.next!=null)
        {
            fast=fast.next.next;
            slow=slow.next;
        }
        return slow;
    }
    static ListNode reverse(ListNode head)
    {
        if(head==null||head.next==null)
        return head;
        ListNode p=reverse(head.next);
        head.next.next=head;
        head.next=null;
        return p;
    }
}
